% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rank_regression.R
\encoding{UTF-8}
\name{r_squared_profiling}
\alias{r_squared_profiling}
\alias{r_squared_profiling.cdf_estimation}
\title{R-Squared-Profile Function for Log-Location-Scale Distributions with Threshold}
\usage{
r_squared_profiling(x, ...)

\method{r_squared_profiling}{cdf_estimation}(
  x,
  thres,
  distribution = c("weibull3", "lognormal3", "loglogistic3"),
  ...
)
}
\arguments{
\item{x}{An object of class \code{cdf_estimation} returned from
\code{\link{estimate_cdf}}.}

\item{thres}{A numeric value for the threshold parameter.}

\item{distribution}{Supposed three-parametric distribution of the random variable.}

\item{y}{A numeric vector which consists of estimated failure probabilities
regarding the lifetime data in \code{x}.}
}
\value{
Returns the coefficient of determination with respect to the threshold parameter
\code{thres}.
}
\description{
This function evaluates the coefficient of determination with respect to a
given threshold parameter of a three-parametric lifetime distribution.
In terms of \emph{Rank Regression} this function can be optimized
(\code{\link{optim}}) to estimate the threshold parameter.
}
\examples{
# Data:
data <- reliability_data(
  data = alloy,
  x = cycles,
  status = status
)

# Probability estimation:
prob_tbl <- estimate_cdf(
  x = data,
  methods = "johnson"
)

# Determining the optimal coefficient of determination:
## Range of threshold parameter must be smaller than the first failure:
threshold <- seq(
  0,
  min(
    dplyr::pull(
      dplyr::filter(
        prob_tbl,
        status == 1,
        x == min(x)
      ),
      x
    ) - 0.1
  ),
  length.out = 100
)

## Coefficient of determination with respect to threshold values:
profile_r2 <- sapply(
  threshold,
  r_squared_profiling,
  x = dplyr::filter(
    prob_tbl,
    status == 1
  ),
  distribution = "weibull3"
)

## Threshold value (among the candidats) that maximizes the coefficient of determination:
threshold[which.max(profile_r2)]

## plot:
plot(
  threshold,
  profile_r2,
  type = "l"
)
abline(
  v = threshold[which.max(profile_r2)],
  h = max(profile_r2),
  col = "red"
)

}
\references{
Meeker, William Q; Escobar, Luis A., Statistical methods for
  reliability data, New York: Wiley series in probability and statistics, 1998
}
\seealso{
\code{\link{r_squared_profiling.default}}
}
