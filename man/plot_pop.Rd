% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_functions.R
\name{plot_pop}
\alias{plot_pop}
\title{Add Population Lines to an Existing Grid}
\usage{
plot_pop(
  p_obj = NULL,
  x,
  param_tbl,
  distribution = c("weibull", "lognormal", "loglogistic"),
  tol = 1e-06,
  title_trace = "Population",
  plot_method = c("plotly", "ggplot2")
)
}
\arguments{
\item{p_obj}{A plotly object, which at least includes the layout provided
by \code{\link{plot_layout}}. If \code{NULL}}

\item{x}{A numeric vector of length two or greater used for the x coordinates
of the population line. If \code{length(x) == 2} a sequence of length 200
between \code{x[1]} and \code{x[2]} is created. This sequence is equidistant
with respect to the scale of the x axis. If \code{length(x) > 2} the elements
of \code{x} are the x coordinates of the population line.}

\item{param_tbl}{A tibble. See 'Details'.}

\item{distribution}{Supposed distribution of the random variable.}

\item{tol}{The failure probability is restricted to the interval
\eqn{[tol, 1 - tol]}. The default value is in accordance with the decimal
places shown in the hover for \code{plot_method = "plotly"}.}

\item{title_trace}{A character string whis is assigned to the trace shown in
the legend.}

\item{plot_method}{Package, which is used for generating the plot output. Only
used with \code{p_obj = NULL}, otherwise \code{p_obj} is used to determine
the plot method.}
}
\value{
A plotly object which contains the supposed linearized population
  CDF. Failure probabilities must be strictly below 1 and for this very reason
}
\description{
This function adds one or multiple linearized CDF to an existing plotly grid.
}
\details{
\code{param_tbl} must be a tibble with the following columns:
\itemize{
  \item \code{param_1}: Location parameter \eqn{\mu} for \code{lognormal} and
    \code{loglogistic}. Scale parameter \eqn{\eta} for \code{weibull}.
  \item \code{param_2}: Scale parameter \eqn{\sigma} for \code{lognormal} and
    \code{loglogistic}. Shape parameter \eqn{\beta} for \code{weibull}.
}
}
\examples{
x <- rweibull(n = 100, shape = 1, scale = 20000)

grid_weibull <- plot_layout(
  x = x,
  distribution = "weibull",
  title_main = "Weibull Analysis",
  title_x = "Time to Failure",
  title_y = "Failure Probability"
)

pop_weibull <- plot_pop(
  p_obj = grid_weibull,
  x = range(x),
  param_tbl = c(20000, 1),
  distribution = "weibull",
  title_trace = "Population"
)

}
