% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/delay_distributions.R
\name{mcs_delay}
\alias{mcs_delay}
\title{Correction of Operating Times by Delays using a Monte Carlo Approach}
\usage{
mcs_delay(
  date_1,
  date_2,
  x,
  status,
  id = paste0("ID", seq_len(length(x))),
  distribution = c("lognormal", "exponential"),
  seed = NULL
)
}
\arguments{
\item{date_1}{A vector of class \code{"character"} or \code{"Date"}, in the
format "yyyy-mm-dd", indicating the earlier of the two dates. If no date is
available use \code{NA}. If more than one delay should be considered it must
be a list with the earlier dates of the delays (See 'Examples').}

\item{date_2}{A vector of class \code{"character"} or \code{"Date"}, in the
format "yyyy-mm-dd", indicating the later of the two dates. If no date is
available use \code{NA}. If more than one delay should be considered it must
be a list with the later dates of the delays (See 'Examples').}

\item{x}{A numeric vector of operating times.}

\item{status}{A vector of binary data (0 or 1) indicating whether unit \emph{i}
is a right censored observation (= 0) or a failure (= 1).}

\item{id}{Identification for every unit.}

\item{distribution}{Supposed distribution of the delay random variable. The
default value is \code{"lognormal"}. If more than one delay is to be
considered and different distributions should be assumed for each delay,
the argument \code{distribution} must have the same length as list \code{date_1}
(or \code{date_2}). For example, in the case of two delays with different
distributions, one has to specify the argument as
\code{distribution = c("lognormal", "exponential")}. Then the lognormal
distribution is applied to the first delay and the exponential distribution
to the second (See 'Examples').}

\item{seed}{If \code{seed = NULL} a random seed is used. Otherwise the user
can specify an integer for the seed.}
}
\value{
A list containing the following elements:
  \itemize{
    \item \code{data} A tibble with classes \code{"mcs_data"} and
      \code{"reliability_data"} containing the following columns:
      \itemize{
        \item \code{date_1} Earlier dates. If argument \code{date_1} is a list
          of length \emph{i, i > 1} (described in \strong{Arguments}) multiple
          columns with names \code{date_1.1}, \code{date_1.2}, ..., \code{date_1.i}
          and the corresponding values of the earlier dates are used.
        \item \code{date_2} Later dates. In the case of a list with length greater
          than 1, the routine described above is used.
        \item \code{x} Adjusted operating times for the censored observations
          and input operating times for the failed units.
        \item \code{status} Binary data (0 or 1) indicating whether a unit is
          a right censored observation (= 0) or a failure (= 1).
        \item \code{id} Identification for every unit.
      }
    \item \code{sim_data} A tibble with column \code{sim_delay} that holds the
      simulated delay-specific numbers for censored units and \code{0} for
      failed observations. If more than one delay was considered multiple columns
      \code{sim_delay_1}, \code{sim_delay_2}, ..., \code{sim_delay_i} with
      corresponding delay-specific random numbers are presented.
    \item \code{estimation_list} A list containing a named list
      (\code{"delay_distribution"}) with output of \code{\link{dist_delay}}. For
      multiple delays the list contains as many lists ((\code{"delay_distribution_1"}),
      (\code{"delay_distribution_2"}), ..., (\code{"delay_distribution_i"})) as
      there are delays.
    \item \code{seed} : Integer seed number for reproducibility.
  }
}
\description{
In general, the amount of available data about units in the field is very
different. While there are many information on failures during the warranty
period, little is known about the units without a failure (\emph{censored data}).
As a result, the operating times of these units are often inaccurate and must
be adjusted by delays. But usually delays are only known for defective units.
See 'Details' for more information.

This function reduces the operating times of (multiple) right censored observations
by simulated delays (in days) which were drawn from the distribution determined
by complete cases (described in 'Details' of \code{\link{dist_delay}}).
}
\details{
In field data analysis time-dependent characteristics (e.g. \emph{time in service})
are often imprecisely recorded. These inaccuracies are caused by unconsidered delays.

For a better understanding of the MCS application in the context of field data,
two cases are described below.
\itemize{
  \item \strong{Delay in registration}: It is common that a supplier, who provides
    parts to the manufacturing industry does not know when the unit, in which
    its parts are installed, were put in service (due to unknown registration
    or sales date). Without taking the described delay into account, the time
    in service of intact units would be the difference between the present
    date and the production date. But the actual operating time is (much) shorter,
    since the stress on the component will not start until the complete system
    is put in service. Therefore the intact units must be reduced by delays.
  \item \strong{Delay in report}: Authorized repairers often do not immediately
    notify the manufacturer or OEM of repairs that occur during the warranty
    period, but instead pass the information about these repairs in form of
    collected applications e.g. monthly or quarterly. The resulting time
    difference between the reporting of the repair in the guarantee database
    and the actual repair date, which is often assumed to be the failure date,
    is called the reporting delay. For a given date where the analysis is made
    there could be units which had a failure but are not registered and therefore
    treated as censored units. In order to take this case into account and
    according to the principle of equal opportunities, the lifetime of intact
    units is reduced by simulated reporting delays, so that the case described
    before is taken into account due to lifetime reduction.
}
}
\examples{
# Data for examples:
date_of_production   <- c("2014-07-28", "2014-02-17", "2014-07-14",
                          "2014-06-26", "2014-03-10", "2014-05-14",
                          "2014-05-06", "2014-03-07", "2014-03-09",
                          "2014-04-13", "2014-05-20", "2014-07-07",
                          "2014-01-27", "2014-01-30", "2014-03-17",
                          "2014-02-09", "2014-04-14", "2014-04-20",
                          "2014-03-13", "2014-02-23", "2014-04-03",
                          "2014-01-08", "2014-01-08")

date_of_registration <- c(NA, "2014-03-29", "2014-12-06", "2014-09-09",
                          NA, NA, "2014-06-16", NA, "2014-05-23",
                          "2014-05-09", "2014-05-31", NA, "2014-04-13",
                          NA, NA, "2014-03-12", NA, "2014-06-02",
                          NA, "2014-03-21", "2014-06-19", NA, NA)

date_of_repair <-       c(NA, "2014-09-15", "2015-07-04", "2015-04-10", NA,
                          NA, "2015-04-24", NA, "2015-04-25", "2015-04-24",
                          "2015-06-12", NA, "2015-05-04", NA, NA,
                          "2015-05-22", NA, "2015-09-17", NA, "2015-08-15",
                          "2015-11-26", NA, NA)

date_of_report <-       c(NA, "2014-10-09", "2015-08-28", "2015-04-15", NA,
                          NA, "2015-05-16", NA, "2015-05-28", "2015-05-15",
                          "2015-07-11", NA, "2015-08-14", NA, NA,
                          "2015-06-05", NA, "2015-10-17", NA, "2015-08-21",
                          "2015-12-02", NA, NA)

time_in_service <- rep(1000, length(date_of_production))
status <- c(0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0)

# Example 1 - MCS for delay in registration:
mcs_regist <- mcs_delay(
  date_1 = date_of_production,
  date_2 = date_of_registration,
  x = time_in_service,
  status = status,
  distribution = "lognormal"
)

# Example 2 - MCS for delay in report:
mcs_report <- mcs_delay(
  date_1 = date_of_repair,
  date_2 = date_of_report,
  x = time_in_service,
  status = status,
  distribution = "exponential"
)

# Example 3 - MCS for delays in registration and report with same distribution:
mcs_delays <- mcs_delay(
  date_1 = list(date_of_production, date_of_repair),
  date_2 = list(date_of_registration, date_of_report),
  x = time_in_service,
  status = status,
  distribution = "lognormal"
)

# Example 4 - MCS for delays in registration and report with different distributions:
## Assuming lognormal registration and exponential reporting delays.
mcs_delays_2 <- mcs_delay(
  date_1 = list(date_of_production, date_of_repair),
  date_2 = list(date_of_registration, date_of_report),
  x = time_in_service,
  status = status,
  distribution = c("lognormal", "exponential")
)
}
\references{
Verband der Automobilindustrie e.V. (VDA); Qualitätsmanagement in
  der Automobilindustrie. Zuverlässigkeitssicherung bei Automobilherstellern
  und Lieferanten. Zuverlässigkeits-Methoden und -Hilfsmittel.; 4th Edition, 2016,
  <ISSN:0943-9412>
}
