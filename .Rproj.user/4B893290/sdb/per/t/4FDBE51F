{
    "collab_server" : "",
    "contents" : "#' Parameter estimation of the delay in registration distribution\n#'\n#' This function generates a delay random variable by calculating the time\n#' difference between the registration and production date for the sample units\n#' and afterwards estimates the parameter(s) of a supposed distribution,\n#' using MLE.\n#'\n#' @param date_prod a vector of class \\code{\"character\"} or \\code{\"Date\"}\n#'   indicating the date of production of a unit.\n#' @param date_register a vector of class \\code{\"character\"} or \\code{\"Date\"}\n#'   indicating the date of registration of a unit.\n#' @param distribution supposed distribution of the random variable. The default\n#'   value is \\code{\"lognormal\"}.\n#'\n#' @return A named vector of estimated parameters for the specified\n#'   distribution.\n#' @export\n#'\n#' @examples\n#' date_of_production   <- c(\"2014-07-28\", \"2014-02-17\", \"2014-07-14\",\n#'                           \"2014-06-26\", \"2014-03-10\", \"2014-05-14\",\n#'                           \"2014-05-06\", \"2014-03-07\", \"2014-03-09\",\n#'                           \"2014-04-13\", \"2014-05-20\", \"2014-07-07\",\n#'                           \"2014-01-27\", \"2014-01-30\", \"2014-03-17\",\n#'                           \"2014-02-09\", \"2014-04-14\", \"2014-04-20\",\n#'                           \"2014-03-13\", \"2014-02-23\", \"2014-04-03\",\n#'                           \"2014-01-08\", \"2014-01-08\")\n#' date_of_registration <- c(\"2014-08-17\", \"2014-03-29\", \"2014-12-06\",\n#'                           \"2014-09-09\", \"2014-05-14\", \"2014-07-01\",\n#'                           \"2014-06-16\", \"2014-04-03\", \"2014-05-23\",\n#'                           \"2014-05-09\", \"2014-05-31\", \"2014-08-12\",\n#'                           \"2014-04-13\", \"2014-02-15\", \"2014-07-07\",\n#'                           \"2014-03-12\", \"2014-05-27\", \"2014-06-02\",\n#'                           \"2014-05-20\", \"2014-03-21\", \"2014-06-19\",\n#'                           \"2014-02-12\", \"2014-03-27\")\n#'\n#' params_delay_regist  <- dist_delay_register(\n#'                                     date_prod = date_of_production,\n#'                                     date_register = date_of_registration,\n#'                                     distribution = \"lognormal\")\n\ndist_delay_register <- function(date_prod, date_register,\n                                distribution = \"lognormal\") {\n\n  if (class(date_prod) != \"Date\" || class(date_register) != \"Date\") {\n    prod_date <- as.Date(date_prod, format = \"%Y-%m-%d\")\n    register_date <- as.Date(date_register, format = \"%Y-%m-%d\")\n    t_regist <- as.numeric(difftime(register_date, prod_date,\n                                    units = \"days\"))\n  } else {\n    t_regist <- as.numeric(difftime(date_register, date_prod,\n                                    units = \"days\"))\n  }\n\n  if (distribution == \"lognormal\") {\n    logmu_regist <- mean(log(t_regist[t_regist > 0]), na.rm = TRUE)\n    logsd_regist <- sd(log(t_regist[t_regist > 0]), na.rm = TRUE)\n\n    estimates <- c(logmu_regist, logsd_regist)\n    names(estimates) <- c(\"meanlog_register\", \"sdlog_register\")\n  } else {\n    stop(\"No valid distribution!\")\n  }\n\n  return(estimates)\n}\n\n#' Adjustment of operating times by delays in registration using Monte Carlo\n#' method\n#'\n#' In general the amount of information about units in the field that have not\n#' failed yet are rare. For example it is common that a supplier, who provides\n#' parts to the automotive industry does not know when a vehicle was put in\n#' service and therefore does not know the exact operating time of the supplied\n#' parts. This function provides a method to get operating times of (multiple)\n#' right censored observations which are corrected by the delay in registration.\n#'\n#' @param date_prod a vector of class \\code{\"character\"} or \\code{\"Date\"}\n#'   indicating the date of production of a unit.\n#' @param date_register a vector of class \\code{\"character\"} or \\code{\"Date\"}\n#'   indicating the date of registration of a unit.\n#' @param x a numeric vector of operating times.\n#' @param event a vector of binary data (0 or 1) indicating whether unit \\emph{i}\n#'   is a right censored observation (= 0) or a failure (= 1).\n#' @param distribution supposed distribution of delay in registration. The\n#'   default value is \\code{\"lognormal\"}.\n#' @param seed if \\code{seed = NULL} a random seed is used. Otherwise the user\n#'   can specify an integer for the seed.\n#' @param details a logical variable, where the default value is \\code{FALSE}.\n#'   If \\code{FALSE} the output consists of a vector with corrected operating\n#'   times for the censored units and the input operating times for the\n#'   failed units. If \\code{TRUE} the output consists of a detailed list, i.e\n#'   the same vector as described before, simulated random numbers, estimated\n#'   distribution parameters and a seed for reproducibility.\n#'\n#' @return A numerical vector of corrected operating times for the censored units\n#'   and the input operating times for the failed units if\n#'   \\code{details = FALSE}. If \\code{details = TRUE} the output is a list which\n#'   consists of the following entries:\n#'   \\itemize{\n#'   \\item \\code{time} : Numerical vector of corrected operating times for the\n#'     censored observations and input operating times for failed units.\n#'   \\item \\code{x_sim} : Simulated random numbers of specified distribution with\n#'     estimated parameters. The length of \\code{x_sim} is equal to the number of\n#'     censored observations.\n#'   \\item \\code{coefficients} : Estimated coefficients of supposed\n#'     distribution.\n#'   \\item \\code{int_seed} : Integer seed number for reproducibility.}\n#'\n#' @export\n#'\n#' @examples\n#' date_of_production   <- c(\"2014-07-28\", \"2014-02-17\", \"2014-07-14\",\n#'                           \"2014-06-26\", \"2014-03-10\", \"2014-05-14\",\n#'                           \"2014-05-06\", \"2014-03-07\", \"2014-03-09\",\n#'                           \"2014-04-13\", \"2014-05-20\", \"2014-07-07\",\n#'                           \"2014-01-27\", \"2014-01-30\", \"2014-03-17\",\n#'                           \"2014-02-09\", \"2014-04-14\", \"2014-04-20\",\n#'                           \"2014-03-13\", \"2014-02-23\", \"2014-04-03\",\n#'                           \"2014-01-08\", \"2014-01-08\")\n#' date_of_registration <- c(\"2014-08-17\", \"2014-03-29\", \"2014-12-06\",\n#'                           \"2014-09-09\", \"2014-05-14\", \"2014-07-01\",\n#'                           \"2014-06-16\", \"2014-04-03\", \"2014-05-23\",\n#'                           \"2014-05-09\", \"2014-05-31\", \"2014-08-12\",\n#'                           \"2014-04-13\", \"2014-02-15\", \"2014-07-07\",\n#'                           \"2014-03-12\", \"2014-05-27\", \"2014-06-02\",\n#'                           \"2014-05-20\", \"2014-03-21\", \"2014-06-19\",\n#'                           \"2014-02-12\", \"2014-03-27\")\n#'\n#' op_time <- rep(1000, length(date_of_production))\n#' state <- sample(c(0, 1), size = length(date_of_production), replace = TRUE)\n#'\n#' # Example 1 - Simplified vector output:\n#' x_corrected <- mcs_delay_register(date_prod = date_of_production,\n#'                                   date_register = date_of_registration,\n#'                                   x = op_time,\n#'                                   event = state,\n#'                                   distribution = \"lognormal\",\n#'                                   seed = NULL,\n#'                                   details = FALSE)\n#'\n#' # Example 2 - Detailed list output:\n#' list_detail <- mcs_delay_register(date_prod = date_of_production,\n#'                                   date_register = date_of_registration,\n#'                                   x = op_time,\n#'                                   event = state,\n#'                                   distribution = \"lognormal\",\n#'                                   seed = NULL,\n#'                                   details = TRUE)\n\nmcs_delay_register <- function(date_prod, date_register, x, event,\n                               distribution = \"lognormal\", seed = NULL,\n                               details = FALSE) {\n\n  # Generate integer that sets the seed (if NULL) in set.seed() function.\n  if (!is.null(seed)) {\n    int_seed <- seed\n  } else {\n    int_seed <- ceiling(runif(n = 1, min = 0, max = 1e6))\n  }\n\n  # Number of Monte Carlo simulated random numbers, i.e. number of censored\n  # data.\n  n_rand <- sum(event == 0)\n\n  if (!complete.cases(date_prod) || !complete.cases(date_register)) {\n    date_prod <- date_prod[(complete.cases(date_prod) &\n                            complete.cases(date_register))]\n    date_register <- date_register[(complete.cases(date_prod) &\n                                    complete.cases(date_register))]\n  }\n\n  if (distribution == \"lognormal\") {\n    params <- dist_delay_register(date_prod = date_prod,\n                                  date_register = date_register,\n                                  distribution = \"lognormal\")\n\n    x_sim <- rlnorm(n = n_rand, meanlog = params[[1]], sdlog = params[[2]])\n  } else {\n    stop(\"No valid distribution!\")\n  }\n\n  x[event == 0] <- x[event == 0] - x_sim\n\n  if (details == FALSE) {\n    output <- x\n  } else {\n    output <- list(time = x, x_sim = x_sim, coefficients = params,\n                   int_seed = int_seed)\n  }\n  return(output)\n}\n\n#' Parameter estimation of the delay in report distribution\n#'\n#' This function generates a delay random variable by calculating the time\n#' difference between the report and repair date for the sample units\n#' and afterwards estimates the parameter(s) of a supposed distribution,\n#' using MLE.\n#'\n#' @param date_repair a vector of class \\code{\"character\"} or \\code{\"Date\"}\n#'   indicating the date of repair of a failed unit.\n#' @param date_report a vector of class \\code{\"character\"} or \\code{\"Date\"}\n#'   indicating the date of the report of a failed unit.\n#' @param distribution supposed distribution of the random variable. The default\n#'   value is \\code{\"lognormal\"}.\n#'\n#' @return A named vector of estimated parameters for the specified\n#'   distribution.\n#' @export\n#'\n#' @examples\n#' date_of_repair <- c(\"2014-10-21\", \"2014-09-15\", \"2015-07-04\", \"2015-04-10\",\n#'                     \"2015-02-15\", \"2015-04-14\", \"2015-04-24\", \"2015-02-27\",\n#'                     \"2015-04-25\", \"2015-04-24\", \"2015-06-12\", \"2015-08-26\",\n#'                     \"2015-05-04\", \"2015-04-04\", \"2015-09-06\", \"2015-05-22\",\n#'                     \"2015-08-21\", \"2015-09-17\", \"2015-09-15\", \"2015-08-15\",\n#'                     \"2015-11-26\", \"2015-08-22\", \"2015-10-05\")\n\n#' date_of_report <- c(\"2014-11-14\", \"2014-10-09\", \"2015-08-28\", \"2015-04-15\",\n#'                     \"2015-02-28\", \"2015-07-03\", \"2015-05-16\", \"2015-03-08\",\n#'                     \"2015-05-28\", \"2015-05-15\", \"2015-07-11\", \"2015-09-12\",\n#'                     \"2015-08-14\", \"2015-05-06\", \"2015-09-10\", \"2015-06-05\",\n#'                     \"2015-09-03\", \"2015-10-17\", \"2015-10-01\", \"2015-08-21\",\n#'                     \"2015-12-02\", \"2015-08-28\", \"2015-11-01\")\n#'\n#' params_delay_report  <- dist_delay_report(date_repair = date_of_repair,\n#'                                             date_report = date_of_report,\n#'                                             distribution = \"lognormal\")\n\ndist_delay_report <- function(date_repair, date_report,\n                               distribution = \"lognormal\") {\n\n  if (class(date_repair) != \"Date\" || class(date_report) != \"Date\") {\n    repair_date <- as.Date(date_repair, format = \"%Y-%m-%d\")\n    report_date <- as.Date(date_report, format = \"%Y-%m-%d\")\n    t_report <- as.numeric(difftime(report_date, repair_date,\n                                    units = \"days\"))\n  } else {\n    t_report <- as.numeric(difftime(date_report, date_repair,\n                                    units = \"days\"))\n  }\n\n  if (distribution == \"lognormal\") {\n    logmu_report <- mean(log(t_report[t_report > 0]), na.rm = TRUE)\n    logsd_report <- sd(log(t_report[t_report > 0]), na.rm = TRUE)\n\n    estimates <- c(logmu_report, logsd_report)\n    names(estimates) <- c(\"meanlog_report\", \"sdlog_report\")\n  } else {\n    stop(\"No valid distribution!\")\n  }\n\n  return(estimates)\n}\n\n#' Adjustment of operating times by delays in report using Monte Carlo method\n#'\n#' The delay in report describes the time between the occurence of a damage and\n#' the registration in the warranty database. For a given date where the analysis\n#' is made there could be units which had a failure but are not registered in the\n#' database and therefore treated as censored units. To overcome this problem\n#' this function provides a method to get operating times of (multiple) right\n#' censored observations which are corrected by the delay of report.\n#'\n#' @param date_repair a vector of class \\code{\"character\"} or \\code{\"Date\"}\n#'   indicating the date of repair of a failed unit.\n#' @param date_report a vector of class \\code{\"character\"} or \\code{\"Date\"}\n#'   indicating the date of the report of a failed unit.\n#' @param x a numeric vector of operating times.\n#' @param event a vector of binary data (0 or 1) indicating whether unit \\emph{i}\n#'   is a right censored observation (= 0) or a failure (= 1).\n#' @param distribution supposed distribution of delay in registration. The\n#'   default value is \\code{\"lognormal\"}.\n#' @param seed if \\code{seed = NULL} a random seed is used. Otherwise the user\n#'   can specify an integer for the seed.\n#' @param details a logical variable, where the default value is \\code{FALSE}.\n#'   If \\code{FALSE} the output consists of a vector with corrected operating\n#'   times for the censored units and the input operating times for the\n#'   failed units. If \\code{TRUE} the output consists of a detailed list, i.e\n#'   the same vector as described before, simulated random numbers, estimated\n#'   distribution parameters and a seed for reproducibility.\n#'\n#' @return A numerical vector of corrected operating times for the censored units\n#'   and the input operating times for the failed units if\n#'   \\code{details = FALSE}. If \\code{details = TRUE} the output is a list which\n#'   consists of the following entries:\n#'   \\itemize{\n#'   \\item \\code{time} : Numerical vector of corrected operating times for the\n#'     censored observations and input operating times for failed units.\n#'   \\item \\code{x_sim} : Simulated random numbers of specified distribution with\n#'     estimated parameters. The length of \\code{x_sim} is equal to the number of\n#'     censored observations.\n#'   \\item \\code{coefficients} : Estimated coefficients of supposed\n#'     distribution.\n#'   \\item \\code{int_seed} : Integer seed number for reproducibility.}\n#'\n#' @export\n#'\n#' @examples\n#' date_of_repair <- c(\"2014-10-21\", \"2014-09-15\", \"2015-07-04\", \"2015-04-10\",\n#'                     \"2015-02-15\", \"2015-04-14\", \"2015-04-24\", \"2015-02-27\",\n#'                     \"2015-04-25\", \"2015-04-24\", \"2015-06-12\", \"2015-08-26\",\n#'                     \"2015-05-04\", \"2015-04-04\", \"2015-09-06\", \"2015-05-22\",\n#'                     \"2015-08-21\", \"2015-09-17\", \"2015-09-15\", \"2015-08-15\",\n#'                     \"2015-11-26\", \"2015-08-22\", \"2015-10-05\")\n\n#' date_of_report <- c(\"2014-11-14\", \"2014-10-09\", \"2015-08-28\", \"2015-04-15\",\n#'                     \"2015-02-28\", \"2015-07-03\", \"2015-05-16\", \"2015-03-08\",\n#'                     \"2015-05-28\", \"2015-05-15\", \"2015-07-11\", \"2015-09-12\",\n#'                     \"2015-08-14\", \"2015-05-06\", \"2015-09-10\", \"2015-06-05\",\n#'                     \"2015-09-03\", \"2015-10-17\", \"2015-10-01\", \"2015-08-21\",\n#'                     \"2015-12-02\", \"2015-08-28\", \"2015-11-01\")\n#'\n#' op_time <- rep(1000, length(date_of_repair))\n#' state <- sample(c(0, 1), size = length(date_of_repair), replace = TRUE)\n#'\n#' # Example 1 - Simplified vector output:\n#' x_corrected <- mcs_delay_report(date_repair = date_of_repair,\n#'                                 date_report = date_of_report,\n#'                                 x = op_time,\n#'                                 event = state,\n#'                                 distribution = \"lognormal\",\n#'                                 seed = NULL,\n#'                                 details = FALSE)\n#'\n#' # Example 2 - Detailed list output:\n#' list_detail <- mcs_delay_report(date_repair = date_of_repair,\n#'                                 date_report = date_of_report,\n#'                                 x = op_time,\n#'                                 event = state,\n#'                                 distribution = \"lognormal\",\n#'                                 seed = NULL,\n#'                                 details = TRUE)\n\nmcs_delay_report <- function(date_repair, date_report, x, event,\n                             distribution = \"lognormal\", details = FALSE,\n                             seed = NULL) {\n\n  # Generate integer that sets the seed (if NULL) in set.seed() function.\n  if (!is.null(seed)) {\n    int_seed <- seed\n  } else {\n    int_seed <- ceiling(runif(n = 1, min = 0, max = 1e6))\n  }\n  set.seed(int_seed)\n\n  # Number of Monte Carlo simulated random numbers, i.e. number of censored\n  # data.\n  n_rand <- sum(event == 0)\n\n  if (!complete.cases(date_repair) || !complete.cases(date_report)) {\n    date_repair <- date_repair[(complete.cases(date_repair) &\n                                complete.cases(date_report))]\n    date_report <- date_report[(complete.cases(date_repair) &\n                                complete.cases(date_report))]\n  }\n\n  if (distribution == \"lognormal\") {\n    params <- dist_delay_report(date_repair = date_repair,\n                                date_report = date_report,\n                                distribution = \"lognormal\")\n\n    x_sim <- rlnorm(n = n_rand, meanlog = params[[1]], sdlog = params[[2]])\n  } else {\n    stop(\"No valid distribution!\")\n  }\n\n  x[event == 0] <- x[event == 0] - x_sim\n\n  if (details == FALSE) {\n    output <- x\n  } else {\n    output <- list(time = x, x_sim = x_sim, coefficients = params,\n      int_seed = int_seed)\n  }\n  return(output)\n}\n\n#' Adjustment of operating times by delays using Monte Carlo method\n#'\n#' This function is a wrapper that combines both, the\n#' \\code{\\link{mcs_delay_register}} and \\code{\\link{mcs_delay_report}} function\n#' for adjusting the operation times of censored units.\n#'\n#' @param date_prod a vector of class \\code{\"character\"} or \\code{\"Date\"}\n#'   indicating the date of production of a unit.\n#' @param date_register a vector of class \\code{\"character\"} or \\code{\"Date\"}\n#'   indicating the date of registration of a unit.\n#' @param date_repair a vector of class \\code{\"character\"} or \\code{\"Date\"}\n#'   indicating the date of repair of a failed unit.\n#' @param date_report a vector of class \\code{\"character\"} or \\code{\"Date\"}\n#'   indicating the date of the report of a failed unit.\n#' @param x a numeric vector of operating times.\n#' @param event a vector of binary data (0 or 1) indicating whether unit \\emph{i}\n#'   is a right censored observation (= 0) or a failure (= 1).\n#' @param distribution supposed distribution of delay in registration. The\n#'   default value is \\code{\"lognormal\"}.\n#' @param seed if \\code{seed = NULL} a random seed is used. Otherwise the user\n#'   can specify an integer for the seed.\n#' @param details a logical variable, where the default value is \\code{FALSE}.\n#'   If \\code{FALSE} the output consists of a vector with corrected operating\n#'   times for the censored units and the input operating times for the\n#'   failed units. If \\code{TRUE} the output consists of a detailed list, i.e\n#'   the same vector as described before, simulated random numbers, estimated\n#'   distribution parameters and a seed for reproducibility.\n#'\n#' @return A numerical vector of corrected operating times for the censored units\n#'   and the input operating times for the failed units if\n#'   \\code{details = FALSE}. If \\code{details = TRUE} the output is a list which\n#'   consists of the following entries:\n#'   \\itemize{\n#'   \\item \\code{time} : Numerical vector of corrected operating times for the\n#'     censored observations and input operating times for failed units.\n#'   \\item \\code{x_sim_regist} : Simulated random numbers of specified\n#'     distribution with estimated parameters for delay in registration.\n#'     The length of \\code{x_sim_regist} is equal to the number of censored\n#'     observations.\n#'   \\item \\code{x_sim_report} : Simulated random numbers of specified\n#'     distribution with estimated parameters for delay in report.\n#'     The length of \\code{x_sim_report} is equal to the number of censored\n#'     observations.\n#'   \\item \\code{coefficients_regist} : Estimated coefficients of supposed\n#'     distribution for delay in registration.\n#'   \\item \\code{coefficients_report} : Estimated coefficients of supposed\n#'     distribution for delay in report.\n#'   \\item \\code{int_seed} : Integer seed number for reproducibility.}\n#'\n#' @export\n#'\n#' @examples\n#' date_of_production   <- c(\"2014-07-28\", \"2014-02-17\", \"2014-07-14\",\n#'                           \"2014-06-26\", \"2014-03-10\", \"2014-05-14\",\n#'                           \"2014-05-06\", \"2014-03-07\", \"2014-03-09\",\n#'                           \"2014-04-13\", \"2014-05-20\", \"2014-07-07\",\n#'                           \"2014-01-27\", \"2014-01-30\", \"2014-03-17\",\n#'                           \"2014-02-09\", \"2014-04-14\", \"2014-04-20\",\n#'                           \"2014-03-13\", \"2014-02-23\", \"2014-04-03\",\n#'                           \"2014-01-08\", \"2014-01-08\")\n#' date_of_registration <- c(\"2014-08-17\", \"2014-03-29\", \"2014-12-06\",\n#'                           \"2014-09-09\", \"2014-05-14\", \"2014-07-01\",\n#'                           \"2014-06-16\", \"2014-04-03\", \"2014-05-23\",\n#'                           \"2014-05-09\", \"2014-05-31\", \"2014-08-12\",\n#'                           \"2014-04-13\", \"2014-02-15\", \"2014-07-07\",\n#'                           \"2014-03-12\", \"2014-05-27\", \"2014-06-02\",\n#'                           \"2014-05-20\", \"2014-03-21\", \"2014-06-19\",\n#'                           \"2014-02-12\", \"2014-03-27\")\n#' date_of_repair <- c(\"2014-10-21\", \"2014-09-15\", \"2015-07-04\", \"2015-04-10\",\n#'                     \"2015-02-15\", \"2015-04-14\", \"2015-04-24\", \"2015-02-27\",\n#'                     \"2015-04-25\", \"2015-04-24\", \"2015-06-12\", \"2015-08-26\",\n#'                     \"2015-05-04\", \"2015-04-04\", \"2015-09-06\", \"2015-05-22\",\n#'                     \"2015-08-21\", \"2015-09-17\", \"2015-09-15\", \"2015-08-15\",\n#'                     \"2015-11-26\", \"2015-08-22\", \"2015-10-05\")\n\n#' date_of_report <- c(\"2014-11-14\", \"2014-10-09\", \"2015-08-28\", \"2015-04-15\",\n#'                     \"2015-02-28\", \"2015-07-03\", \"2015-05-16\", \"2015-03-08\",\n#'                     \"2015-05-28\", \"2015-05-15\", \"2015-07-11\", \"2015-09-12\",\n#'                     \"2015-08-14\", \"2015-05-06\", \"2015-09-10\", \"2015-06-05\",\n#'                     \"2015-09-03\", \"2015-10-17\", \"2015-10-01\", \"2015-08-21\",\n#'                     \"2015-12-02\", \"2015-08-28\", \"2015-11-01\")\n#'\n#' op_time <- rep(1000, length(date_of_repair))\n#' state <- sample(c(0, 1), size = length(date_of_repair), replace = TRUE)\n#'\n#' # Example 1 - Simplified vector output:\n#' x_corrected <- mcs_delays(date_prod = date_of_production,\n#'                           date_register = date_of_registration,\n#'                           date_repair = date_of_repair,\n#'                           date_report = date_of_report,\n#'                           x = op_time,\n#'                           event = state,\n#'                           distribution = \"lognormal\",\n#'                           seed = NULL,\n#'                           details = FALSE)\n#'\n#' # Example 2 - Detailed list output:\n#' list_detail <- mcs_delays(date_prod = date_of_production,\n#'                                 date_register = date_of_registration,\n#'                                 date_repair = date_of_repair,\n#'                                 date_report = date_of_report,\n#'                                 x = op_time,\n#'                                 event = state,\n#'                                 distribution = \"lognormal\",\n#'                                 seed = NULL,\n#'                                 details = TRUE)\n\nmcs_delays <- function(date_prod, date_register, date_repair, date_report, x,\n                       event, distribution = \"lognormal\", details = FALSE,\n                       seed = NULL) {\n\n  # Generate integer that sets the seed (if NULL) in set.seed() function.\n  if (!is.null(seed)) {\n    int_seed <- seed\n  } else {\n    int_seed <- ceiling(runif(n = 1, min = 0, max = 1e6))\n  }\n  set.seed(int_seed)\n\n  # Number of Monte Carlo simulated random numbers, i.e. number of censored\n  # data.\n  n_rand <- sum(event == 0)\n\n  if (!complete.cases(date_prod) || !complete.cases(date_register)) {\n    date_prod <- date_prod[(complete.cases(date_prod) &\n        complete.cases(date_register))]\n    date_register <- date_register[(complete.cases(date_prod) &\n        complete.cases(date_register))]\n  }\n\n  if (!complete.cases(date_repair) || !complete.cases(date_report)) {\n    date_repair <- date_repair[(complete.cases(date_repair) &\n        complete.cases(date_report))]\n    date_report <- date_report[(complete.cases(date_repair) &\n        complete.cases(date_report))]\n  }\n\n  if (distribution == \"lognormal\") {\n    params_regist <- dist_delay_register(date_prod = date_prod,\n                                         date_register = date_register,\n                                         distribution = \"lognormal\")\n    params_report <- dist_delay_report(date_repair = date_repair,\n                                       date_report = date_report,\n                                       distribution = \"lognormal\")\n\n    x_sim_regist <- rlnorm(n = n_rand, meanlog = params_regist[[1]],\n                           sdlog = params_regist[[2]])\n    x_sim_report <- rlnorm(n = n_rand, meanlog = params_report[[1]],\n                           sdlog = params_report[[2]])\n  } else {\n    stop(\"No valid distribution!\")\n  }\n\n  x[event == 0] <- x[event == 0] - (x_sim_regist + x_sim_report)\n\n  if (details == FALSE) {\n    output <- x\n  } else {\n    output <- list(time = x, x_sim_regist = x_sim_regist,\n                   x_sim_report = x_sim_report,\n                   coefficients_regist = params_regist,\n                   coefficients_report = params_report,\n                   int_seed = int_seed)\n  }\n  return(output)\n}\n",
    "created" : 1507885264965.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1499762070",
    "id" : "4FDBE51F",
    "lastKnownWriteTime" : 1507810632,
    "last_content_update" : 1507810632,
    "path" : "C:/Users/Tim.Hensel/Desktop/weibulltools/R/delay_distributions.R",
    "project_path" : "R/delay_distributions.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}